{"version":3,"file":"genericheading.js","mappings":"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","sources":["webpack://fictional-university-theme/external window [\"wp\",\"blockEditor\"]","webpack://fictional-university-theme/external window [\"wp\",\"blocks\"]","webpack://fictional-university-theme/external window [\"wp\",\"components\"]","webpack://fictional-university-theme/external window [\"wp\",\"element\"]","webpack://fictional-university-theme/webpack/bootstrap","webpack://fictional-university-theme/webpack/runtime/compat get default export","webpack://fictional-university-theme/webpack/runtime/define property getters","webpack://fictional-university-theme/webpack/runtime/hasOwnProperty shorthand","webpack://fictional-university-theme/webpack/runtime/make namespace object","webpack://fictional-university-theme/./our-blocks/genericheading.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\r\nimport { BlockControls, RichText } from '@wordpress/block-editor';\r\nimport { ToolbarGroup, ToolbarButton } from '@wordpress/components';\r\n\r\n// Register a new block type with the name 'fictional-blocks/genericheading'\r\nregisterBlockType('fictional-blocks/genericheading', {\r\n    // Block title\r\n    title: 'Generic Heading',\r\n    // Block attributes\r\n    attributes: {\r\n        // Text attribute of type string\r\n        text: {\r\n            type: 'string',\r\n        },\r\n        // Size attribute of type string with a default value of 'large'\r\n        size: {\r\n            type: 'string',\r\n            default: 'large',\r\n        },\r\n    },\r\n\r\n    // Edit component for the block\r\n    edit: EditComponent,\r\n    // Save component for the block\r\n    save: SaveComponent,\r\n});\r\n\r\n// Edit component for the block\r\nfunction EditComponent(props) {\r\n\r\n    // Function to handle text change\r\n    function handleTextChange(newValue) {\r\n        // Set the 'text' attribute value to the new text\r\n        props.setAttributes({ text: newValue });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* Block controls */}\r\n            <BlockControls>\r\n                <ToolbarGroup>\r\n                    {/* Toolbar button for large size */}\r\n                    <ToolbarButton isPressed={props.attributes.size === 'large'} onClick={() => props.setAttributes({ size: 'large' })} > Large </ToolbarButton>\r\n                    {/* Toolbar button for medium size */}\r\n                    <ToolbarButton isPressed={props.attributes.size === 'Medium'} onClick={() => props.setAttributes({ size: 'medium' })} > Medium </ToolbarButton>\r\n                    {/* Toolbar button for small size */}\r\n                    <ToolbarButton isPressed={props.attributes.size === 'Small'} onClick={() => props.setAttributes({ size: 'small' })} > Small </ToolbarButton>\r\n                </ToolbarGroup>\r\n            </BlockControls>\r\n            {/* RichText component to edit the heading */}\r\n            <RichText allowedFormats={[\"core/bold\", \"core/italic\"]} tagName=\"h1\" className={`headline headline--${props.attributes.size}`} value={props.attributes.text} onChange={handleTextChange} />\r\n        </>\r\n    );\r\n};\r\n\r\n// Save component for the block\r\nfunction SaveComponent(props) {\r\n\r\n    // Function to create the appropriate HTML tag name based on the size attribute\r\n    function createTagName() {\r\n        switch (props.attributes.size) {\r\n            case 'large':\r\n                return 'h1';\r\n            case 'medium':\r\n                return 'h2';\r\n            case 'small':\r\n                return 'h3';\r\n        }\r\n    }\r\n\r\n    // Render the saved block content using the appropriate HTML tag and class name\r\n    return <RichText.Content tagName={createTagName()} value={props.attributes.text} className={`headline headline--${props.attributes.size}`} />\r\n\r\n}\r\n"],"names":["registerBlockType","BlockControls","RichText","ToolbarGroup","ToolbarButton","title","attributes","text","type","size","default","edit","EditComponent","save","SaveComponent","props","handleTextChange","newValue","setAttributes","createElement","Fragment","isPressed","onClick","allowedFormats","tagName","className","value","onChange","createTagName","Content"],"sourceRoot":""}